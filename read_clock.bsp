' {$STAMP BS2p}
' {$PBASIC 2.5}
' Read clock into WbData


P_MAIN          CON 0
P_COLLECT_DATA  CON 1
P_READ_CLOCK    CON 2
P_EEPROM_WRITER CON 3

DATA_SIZE   CON 16

WbData VAR  Byte(DATA_SIZE)
AddrIndex VAR Word
initialized VAR Bit

addr VAR Word
value VAR Byte

'' Begin program

C_SEC   CON 0
C_MIN   CON 1
C_HOUR  CON 2
C_DATE  CON 3
C_MONTH CON 4
C_DAY   CON 5
C_YEAR  CON 6
CONTROL CON 7
TRICKLE CON 8
BURST   CON 31

rtc   PIN 10
sdat  PIN 11
sclk  PIN 12


'DEBUG "Reading clock..."
GOSUB COLLECT_DATE_TIME
'DEBUG "clock read", CR

RUN P_EEPROM_WRITER

STOP

COLLECT_DATE_TIME:
  FOR addr = 6 TO 0
    GOSUB _GET_TIME
    'DEBUG "I = ", DEC ADR, ", VAL=", HEX2 VAL, CR

    WbData(addr+1) = value
  NEXT

  RETURN

DISPLAY_CURRENT_DATE_TIME:
  DEBUG "The time is ", CR

  addr = C_YEAR
  GOSUB _GET_TIME
  DEBUG HEX2 value, "/"

  addr = C_MONTH
  GOSUB _GET_TIME
  DEBUG HEX2 value, "/"

  addr = C_DAY
  GOSUB _GET_TIME
  DEBUG HEX2 value, " "

  addr = C_HOUR
  GOSUB _GET_TIME
  DEBUG HEX2 value, ":"

  addr = C_MIN
  GOSUB _GET_TIME
  DEBUG HEX2 value, ":"

  addr = C_SEC
  GOSUB _GET_TIME
  DEBUG HEX2 value, CR

  RETURN

_GET_TIME:
  LOW rtc
  LOW sclk
  HIGH rtc
  SHIFTOUT sdat, sclk, LSBFIRST, [$81|(addr<<1)\8]
  SHIFTIN sdat, sclk, LSBPRE, [value\8]
  LOW rtc
  RETURN

PRINT_DATA:
  DEBUG "Location: ", HEX4 AddrIndex, " "

  DEBUG "FB: ", HEX2 WbData(0), ", "

  DEBUG "time: "

  DEBUG HEX2 WbData(6+1), "/"

  addr = WbData(4+1)
  DEBUG HEX2 WbData(4+1), "/"

  addr = WbData(3+1)
  DEBUG HEX2 WbData(3+1), " "

  addr = WbData(2+1)
  DEBUG HEX2 WbData(2+1), ":"

  addr = WbData(1+1)
  DEBUG HEX2 WbData(1+1), ":"

  addr = WbData(0+1)
  DEBUG HEX2 WbData(0+1)

  addr = WbData(5+1)
  DEBUG "(", HEX1 WbData(5+1), "), "

  DEBUG "data: "

  FOR value = 8 TO DATA_SIZE-1
    DEBUG HEX2 WbData(value), ", "
  NEXT

  DEBUG CR

  RETURN